generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  email        String      @unique
  password     String
  firstName    String?
  lastName     String?
  title        String?
  organization String?
  dateCreated  DateTime?   @default(now())
  dateUpdated  DateTime?   @default(now()) @updatedAt
  courses      Course[]
  thumbnails   Thumbnail[]

  @@map("users")
}

model Course {
  id          Int       @id @default(autoincrement())
  courseName  String
  userId      Int
  dateCreated DateTime? @default(now())
  dateUpdated DateTime? @default(now()) @updatedAt
  isArchived  Boolean   @default(false)
  thumbnail   String?   @db.VarChar(250)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  units       Unit[]

  @@map("courses")
}

model Unit {
  id          Int       @id @default(autoincrement())
  unitNumber  Int
  unitName    String
  courseId    Int
  dateCreated DateTime? @default(now())
  dateUpdated DateTime? @default(now()) @updatedAt
  lessons     Lesson[]
  course      Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@map("units")
}

model Lesson {
  id               Int       @id @default(autoincrement())
  lessonName       String
  lessonNumber     Int
  completionStatus String    @default("not prepped")
  epectedOutcomes  String?
  assessment       String?
  dateCreated      DateTime? @default(now())
  dateUpdated      DateTime? @default(now()) @updatedAt
  unitId           Int
  unit             Unit      @relation(fields: [unitId], references: [id], onDelete: Cascade)

  @@map("lessons")
}

// a model for thumbnails and users
// we have this just for the purpose of validating if a user owns the thumbnail
model Thumbnail {
  id        Int    @id @default(autoincrement())
  thumbnail String @db.VarChar(250)
  userId    Int
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("thumbnails")
}
